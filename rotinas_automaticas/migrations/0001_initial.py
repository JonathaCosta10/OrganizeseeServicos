# Generated by Django 5.2.6 on 2025-09-10 23:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnualFcaCiaAbertaGeral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cnpj_companhia", models.TextField(blank=True, null=True)),
                ("data_referencia", models.TextField(blank=True, null=True)),
                ("versao", models.BigIntegerField(blank=True, null=True)),
                ("id_documento", models.BigIntegerField(blank=True, null=True)),
                ("nome_empresarial", models.TextField(blank=True, null=True)),
                ("data_nome_empresarial", models.TextField(blank=True, null=True)),
                ("nome_empresarial_anterior", models.TextField(blank=True, null=True)),
                ("data_constituicao", models.TextField(blank=True, null=True)),
                ("codigo_cvm", models.BigIntegerField(blank=True, null=True)),
                ("data_registro_cvm", models.TextField(blank=True, null=True)),
                ("categoria_registro_cvm", models.TextField(blank=True, null=True)),
                (
                    "data_categoria_registro_cvm",
                    models.TextField(blank=True, null=True),
                ),
                ("situacao_registro_cvm", models.TextField(blank=True, null=True)),
                ("data_situacao_registro_cvm", models.TextField(blank=True, null=True)),
                ("pais_origem", models.TextField(blank=True, null=True)),
                (
                    "pais_custodia_valores_mobiliarios",
                    models.TextField(blank=True, null=True),
                ),
                ("setor_atividade", models.TextField(blank=True, null=True)),
                ("descricao_atividade", models.TextField(blank=True, null=True)),
                ("situacao_emissor", models.TextField(blank=True, null=True)),
                ("data_situacao_emissor", models.TextField(blank=True, null=True)),
                ("especie_controle_acionario", models.TextField(blank=True, null=True)),
                (
                    "data_especie_controle_acionario",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "dia_encerramento_exercicio_social",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "mes_encerramento_exercicio_social",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "data_alteracao_exercicio_social",
                    models.TextField(blank=True, null=True),
                ),
                ("pagina_web", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Dados Gerais Anuais - Companhia Aberta",
                "verbose_name_plural": "Dados Gerais Anuais - Companhias Abertas",
                "db_table": "rotinas_automaticas_anual_fca_cia_aberta_geral",
            },
        ),
        migrations.CreateModel(
            name="AnualFcaCiaAbertaValorMobiliario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cnpj_companhia", models.TextField(blank=True, null=True)),
                ("data_referencia", models.TextField(blank=True, null=True)),
                ("versao", models.BigIntegerField(blank=True, null=True)),
                ("id_documento", models.BigIntegerField(blank=True, null=True)),
                ("nome_empresarial", models.TextField(blank=True, null=True)),
                ("valor_mobiliario", models.TextField(blank=True, null=True)),
                (
                    "sigla_classe_acao_preferencial",
                    models.TextField(blank=True, null=True),
                ),
                ("classe_acao_preferencial", models.TextField(blank=True, null=True)),
                ("codigo_negociacao", models.TextField(blank=True, null=True)),
                ("composicao_bdr_unit", models.TextField(blank=True, null=True)),
                ("mercado", models.TextField(blank=True, null=True)),
                (
                    "sigla_entidade_administradora",
                    models.TextField(blank=True, null=True),
                ),
                ("entidade_administradora", models.TextField(blank=True, null=True)),
                ("data_inicio_negociacao", models.TextField(blank=True, null=True)),
                ("data_fim_negociacao", models.TextField(blank=True, null=True)),
                ("segmento", models.TextField(blank=True, null=True)),
                ("data_inicio_listagem", models.TextField(blank=True, null=True)),
                ("data_fim_listagem", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Valor Mobiliário - Companhia Aberta",
                "verbose_name_plural": "Valores Mobiliários - Companhias Abertas",
                "db_table": "rotinas_automaticas_anual_fca_cia_aberta_valor_mobiliario",
            },
        ),
        migrations.CreateModel(
            name="AtivosPrecos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo", models.CharField(max_length=100)),
                ("ticker", models.CharField(max_length=10)),
                ("close", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "open",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "high",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "low",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                ("data", models.DateField()),
                ("fonte", models.CharField(max_length=10)),
            ],
            options={
                "verbose_name": "Preços de Ativos",
                "verbose_name_plural": "Preços de Ativos",
                "db_table": "organizesee_ativosprecos",
            },
        ),
        migrations.CreateModel(
            name="B3InstrumentsConsolidated",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipreg", models.CharField(blank=True, max_length=10, null=True)),
                ("datref", models.DateField(blank=True, null=True)),
                ("codinst", models.CharField(blank=True, max_length=50, null=True)),
                ("isin", models.CharField(blank=True, max_length=20, null=True)),
                ("nomres", models.CharField(blank=True, max_length=200, null=True)),
                ("nomcom", models.CharField(blank=True, max_length=200, null=True)),
                ("tipmerc", models.CharField(blank=True, max_length=10, null=True)),
                ("tpativo", models.CharField(blank=True, max_length=10, null=True)),
                ("segmento", models.CharField(blank=True, max_length=50, null=True)),
                ("mercado", models.CharField(blank=True, max_length=50, null=True)),
                ("setativ", models.CharField(blank=True, max_length=100, null=True)),
                ("classi", models.CharField(blank=True, max_length=100, null=True)),
                ("codcfi", models.CharField(blank=True, max_length=10, null=True)),
                ("dtini", models.DateField(blank=True, null=True)),
                ("dtfim", models.DateField(blank=True, null=True)),
                ("data_carga", models.DateTimeField(auto_now_add=True)),
                ("fonte", models.CharField(default="B3", max_length=20)),
            ],
            options={
                "verbose_name": "B3 Instrumento Consolidado",
                "verbose_name_plural": "B3 Instrumentos Consolidados",
                "db_table": "b3_instruments_consolidated",
            },
        ),
        migrations.CreateModel(
            name="B3TradeInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipreg", models.CharField(blank=True, max_length=10, null=True)),
                ("datref", models.DateField(blank=True, null=True)),
                ("codinst", models.CharField(blank=True, max_length=50, null=True)),
                ("nomres", models.CharField(blank=True, max_length=200, null=True)),
                ("especi", models.CharField(blank=True, max_length=100, null=True)),
                ("prazot", models.CharField(blank=True, max_length=10, null=True)),
                ("modref", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "preabe",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "premax",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "premin",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "premed",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "preult",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "preofc",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "preofv",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("totneg", models.IntegerField(blank=True, null=True)),
                ("quatot", models.BigIntegerField(blank=True, null=True)),
                (
                    "voltot",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=20, null=True
                    ),
                ),
                (
                    "preexe",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("indopc", models.CharField(blank=True, max_length=10, null=True)),
                ("datven", models.DateField(blank=True, null=True)),
                ("fatcot", models.IntegerField(blank=True, null=True)),
                (
                    "ptoexe",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("codisi", models.CharField(blank=True, max_length=20, null=True)),
                ("dismes", models.IntegerField(blank=True, null=True)),
                ("data_carga", models.DateTimeField(auto_now_add=True)),
                ("fonte", models.CharField(default="B3", max_length=20)),
            ],
            options={
                "verbose_name": "B3 Informação de Negociação",
                "verbose_name_plural": "B3 Informações de Negociação",
                "db_table": "b3_trade_information",
            },
        ),
        migrations.CreateModel(
            name="EtlMetadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("arquivo", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "tipo_processamento",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("registros_processados", models.IntegerField(blank=True, null=True)),
                ("data_processamento", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                ("observacoes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Metadados ETL",
                "verbose_name_plural": "Metadados ETL",
                "db_table": "etl_metadata",
            },
        ),
        migrations.CreateModel(
            name="FcaCiaAberta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cnpj_cia", models.TextField(blank=True, null=True)),
                ("dt_refer", models.TextField(blank=True, null=True)),
                ("versao", models.BigIntegerField(blank=True, null=True)),
                ("denom_cia", models.TextField(blank=True, null=True)),
                ("cd_cvm", models.BigIntegerField(blank=True, null=True)),
                ("categ_doc", models.TextField(blank=True, null=True)),
                ("id_doc", models.BigIntegerField(blank=True, null=True)),
                ("dt_receb", models.TextField(blank=True, null=True)),
                ("link_doc", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "FCA Companhia Aberta",
                "verbose_name_plural": "FCA Companhias Abertas",
                "db_table": "rotinas_automaticas_fca_cia_aberta",
            },
        ),
        migrations.CreateModel(
            name="InfAnualFiiAtivoValorContabil",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cnpj_fundo_classe", models.TextField(blank=True, null=True)),
                ("data_referencia", models.TextField(blank=True, null=True)),
                ("versao", models.BigIntegerField(blank=True, null=True)),
                ("nome_ativo", models.TextField(blank=True, null=True)),
                ("valor", models.FloatField(blank=True, null=True)),
                ("valor_justo", models.TextField(blank=True, null=True)),
                (
                    "percentual_valorizacao_desvalorizacao",
                    models.FloatField(blank=True, null=True),
                ),
            ],
            options={
                "verbose_name": "Informação Anual FII - Ativo Valor Contábil",
                "verbose_name_plural": "Informações Anuais FII - Ativos Valores Contábeis",
                "db_table": "rotinas_automaticas_inf_anual_fii_ativo_valor_contabil",
            },
        ),
        migrations.CreateModel(
            name="InfAnualFiiGeral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo_fundo_classe", models.TextField(blank=True, null=True)),
                ("cnpj_fundo_classe", models.TextField(blank=True, null=True)),
                ("data_referencia", models.TextField(blank=True, null=True)),
                ("versao", models.BigIntegerField(blank=True, null=True)),
                ("data_entrega", models.TextField(blank=True, null=True)),
                ("nome_fundo_classe", models.TextField(blank=True, null=True)),
                ("data_funcionamento", models.TextField(blank=True, null=True)),
                ("publico_alvo", models.TextField(blank=True, null=True)),
                ("codigo_isin", models.TextField(blank=True, null=True)),
                ("quantidade_cotas_emitidas", models.FloatField(blank=True, null=True)),
                ("fundo_exclusivo", models.TextField(blank=True, null=True)),
                ("cotistas_vinculo_familiar", models.TextField(blank=True, null=True)),
                ("mandato", models.TextField(blank=True, null=True)),
                ("segmento_atuacao", models.TextField(blank=True, null=True)),
                ("tipo_gestao", models.TextField(blank=True, null=True)),
                ("prazo_duracao", models.TextField(blank=True, null=True)),
                ("data_prazo_duracao", models.TextField(blank=True, null=True)),
                (
                    "encerramento_exercicio_social",
                    models.TextField(blank=True, null=True),
                ),
                ("mercado_negociacao_bolsa", models.TextField(blank=True, null=True)),
                ("mercado_negociacao_mbo", models.TextField(blank=True, null=True)),
                ("mercado_negociacao_mb", models.TextField(blank=True, null=True)),
                (
                    "entidade_administradora_bvmf",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "entidade_administradora_cetip",
                    models.TextField(blank=True, null=True),
                ),
                ("nome_administrador", models.TextField(blank=True, null=True)),
                ("cnpj_administrador", models.TextField(blank=True, null=True)),
                ("logradouro", models.TextField(blank=True, null=True)),
                ("numero", models.TextField(blank=True, null=True)),
                ("complemento", models.TextField(blank=True, null=True)),
                ("bairro", models.TextField(blank=True, null=True)),
                ("cidade", models.TextField(blank=True, null=True)),
                ("estado", models.TextField(blank=True, null=True)),
                ("cep", models.TextField(blank=True, null=True)),
                ("telefone1", models.TextField(blank=True, null=True)),
                ("telefone2", models.TextField(blank=True, null=True)),
                ("telefone3", models.TextField(blank=True, null=True)),
                ("site", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Informação Anual FII - Geral",
                "verbose_name_plural": "Informações Anuais FII - Geral",
                "db_table": "rotinas_automaticas_inf_anual_fii_geral",
            },
        ),
        migrations.CreateModel(
            name="InfMensalFiiAtivoPassivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cnpj_fundo_classe", models.TextField(blank=True, null=True)),
                ("data_referencia", models.TextField(blank=True, null=True)),
                ("versao", models.BigIntegerField(blank=True, null=True)),
                (
                    "total_necessidades_liquidez",
                    models.FloatField(blank=True, null=True),
                ),
                ("disponibilidades", models.FloatField(blank=True, null=True)),
                ("titulos_publicos", models.FloatField(blank=True, null=True)),
                ("titulos_privados", models.FloatField(blank=True, null=True)),
                ("fundos_renda_fixa", models.FloatField(blank=True, null=True)),
                ("total_investido", models.FloatField(blank=True, null=True)),
                ("direitos_bens_imoveis", models.FloatField(blank=True, null=True)),
                ("terrenos", models.FloatField(blank=True, null=True)),
                ("imoveis_renda_acabados", models.FloatField(blank=True, null=True)),
                ("imoveis_renda_construcao", models.FloatField(blank=True, null=True)),
                ("imoveis_venda_acabados", models.FloatField(blank=True, null=True)),
                ("imoveis_venda_construcao", models.FloatField(blank=True, null=True)),
                ("outros_direitos_reais", models.FloatField(blank=True, null=True)),
                ("acoes", models.FloatField(blank=True, null=True)),
                ("debentures", models.FloatField(blank=True, null=True)),
                ("bonus_subscricao", models.FloatField(blank=True, null=True)),
                (
                    "certificados_deposito_valores_mobiliarios",
                    models.FloatField(blank=True, null=True),
                ),
                ("cedulas_debentures", models.FloatField(blank=True, null=True)),
                ("fundo_acoes", models.FloatField(blank=True, null=True)),
                ("fip", models.FloatField(blank=True, null=True)),
                ("fii", models.FloatField(blank=True, null=True)),
                ("fdic", models.FloatField(blank=True, null=True)),
                ("outras_cotas_fi", models.FloatField(blank=True, null=True)),
                ("notas_promissorias", models.FloatField(blank=True, null=True)),
                (
                    "acoes_sociedades_atividades_fii",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "cotas_sociedades_atividades_fii",
                    models.FloatField(blank=True, null=True),
                ),
                ("cepac", models.FloatField(blank=True, null=True)),
                ("cri", models.FloatField(blank=True, null=True)),
                ("cri_cra", models.FloatField(blank=True, null=True)),
                ("letras_hipotecarias", models.FloatField(blank=True, null=True)),
                ("lci", models.FloatField(blank=True, null=True)),
                ("lci_lca", models.FloatField(blank=True, null=True)),
                ("lig", models.FloatField(blank=True, null=True)),
                ("outros_valores_mobliarios", models.FloatField(blank=True, null=True)),
                ("valores_receber", models.FloatField(blank=True, null=True)),
                ("contas_receber_aluguel", models.FloatField(blank=True, null=True)),
                (
                    "contas_receber_venda_imoveis",
                    models.FloatField(blank=True, null=True),
                ),
                ("outros_valores_receber", models.FloatField(blank=True, null=True)),
                ("rendimentos_distribuir", models.FloatField(blank=True, null=True)),
                ("taxa_administracao_pagar", models.FloatField(blank=True, null=True)),
                ("taxa_performance_pagar", models.FloatField(blank=True, null=True)),
                (
                    "obrigacoes_aquisicao_imoveis",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "adiantamento_venda_imoveis",
                    models.FloatField(blank=True, null=True),
                ),
                ("adiantamento_alugueis", models.FloatField(blank=True, null=True)),
                (
                    "obrigacoes_securitizacao_recebiveis",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "instrumentos_financeiros_derivativos",
                    models.FloatField(blank=True, null=True),
                ),
                ("provisoes_contigencias", models.FloatField(blank=True, null=True)),
                ("outros_valores_pagar", models.FloatField(blank=True, null=True)),
                ("total_passivo", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Informação Mensal FII - Ativo/Passivo",
                "verbose_name_plural": "Informações Mensais FII - Ativo/Passivo",
                "db_table": "rotinas_automaticas_inf_mensal_fii_ativo_passivo",
            },
        ),
        migrations.CreateModel(
            name="InfMensalFiiComplemento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cnpj_fundo_classe", models.TextField(blank=True, null=True)),
                ("data_referencia", models.TextField(blank=True, null=True)),
                ("versao", models.BigIntegerField(blank=True, null=True)),
                (
                    "data_informacao_numero_cotistas",
                    models.TextField(blank=True, null=True),
                ),
                ("total_numero_cotistas", models.FloatField(blank=True, null=True)),
                (
                    "numero_cotistas_pessoa_fisica",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_pessoa_juridica_nao_financeira",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_banco_comercial",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_corretora_distribuidora",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_outras_pessoas_juridicas_financeira",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_investidores_nao_residentes",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_entidade_aberta_previdencia_complementar",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_entidade_fechada_previdencia_complementar",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_regime_proprio_previdencia_servidores_publicos",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_sociedade_seguradora_resseguradora",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_sociedade_capitalizacao_arrendamento_mercantil",
                    models.FloatField(blank=True, null=True),
                ),
                ("numero_cotistas_fii", models.FloatField(blank=True, null=True)),
                (
                    "numero_cotistas_outros_fundos",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_distribuidores_fundo",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "numero_cotistas_outros_tipos",
                    models.FloatField(blank=True, null=True),
                ),
                ("valor_ativo", models.FloatField(blank=True, null=True)),
                ("patrimonio_liquido", models.FloatField(blank=True, null=True)),
                ("cotas_emitidas", models.FloatField(blank=True, null=True)),
                ("valor_patrimonial_cotas", models.FloatField(blank=True, null=True)),
                (
                    "percentual_despesas_taxa_administracao",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "percentual_despesas_agente_custodiante",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "percentual_rentabilidade_efetiva_mes",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "percentual_rentabilidade_patrimonial_mes",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "percentual_dividend_yield_mes",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "percentual_amortizacao_cotas_mes",
                    models.FloatField(blank=True, null=True),
                ),
            ],
            options={
                "verbose_name": "Informação Mensal FII - Complemento",
                "verbose_name_plural": "Informações Mensais FII - Complemento",
                "db_table": "rotinas_automaticas_inf_mensal_fii_complemento",
            },
        ),
        migrations.CreateModel(
            name="InfMensalFiiGeral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cnpj_fundo_classe", models.TextField(blank=True, null=True)),
                ("data_referencia", models.DateTimeField(blank=True, null=True)),
                ("tipo_fundo_classe", models.TextField(blank=True, null=True)),
                ("versao", models.BigIntegerField(blank=True, null=True)),
                ("data_entrega", models.TextField(blank=True, null=True)),
                ("nome_fundo_classe", models.TextField(blank=True, null=True)),
                ("data_funcionamento", models.TextField(blank=True, null=True)),
                ("publico_alvo", models.TextField(blank=True, null=True)),
                ("codigo_isin", models.TextField(blank=True, null=True)),
                ("quantidade_cotas_emitidas", models.FloatField(blank=True, null=True)),
                ("fundo_exclusivo", models.TextField(blank=True, null=True)),
                ("cotistas_vinculo_familiar", models.TextField(blank=True, null=True)),
                ("mandato", models.TextField(blank=True, null=True)),
                ("segmento_atuacao", models.TextField(blank=True, null=True)),
                ("tipo_gestao", models.TextField(blank=True, null=True)),
                ("prazo_duracao", models.TextField(blank=True, null=True)),
                ("data_prazo_duracao", models.TextField(blank=True, null=True)),
                (
                    "encerramento_exercicio_social",
                    models.TextField(blank=True, null=True),
                ),
                ("mercado_negociacao_bolsa", models.TextField(blank=True, null=True)),
                ("mercado_negociacao_mbo", models.TextField(blank=True, null=True)),
                ("mercado_negociacao_mb", models.TextField(blank=True, null=True)),
                (
                    "entidade_administradora_bvmf",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "entidade_administradora_cetip",
                    models.TextField(blank=True, null=True),
                ),
                ("nome_administrador", models.TextField(blank=True, null=True)),
                ("cnpj_administrador", models.FloatField(blank=True, null=True)),
                ("logradouro", models.TextField(blank=True, null=True)),
                ("numero", models.TextField(blank=True, null=True)),
                ("complemento", models.TextField(blank=True, null=True)),
                ("bairro", models.TextField(blank=True, null=True)),
                ("cidade", models.TextField(blank=True, null=True)),
                ("estado", models.TextField(blank=True, null=True)),
                ("cep", models.TextField(blank=True, null=True)),
                ("telefone1", models.TextField(blank=True, null=True)),
                ("telefone2", models.TextField(blank=True, null=True)),
                ("telefone3", models.TextField(blank=True, null=True)),
                ("site", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Informação Mensal FII - Geral",
                "verbose_name_plural": "Informações Mensais FII - Geral",
                "db_table": "rotinas_automaticas_inf_mensal_fii_geral",
            },
        ),
        migrations.CreateModel(
            name="ProcessingMetadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("arquivo_origem", models.CharField(max_length=255)),
                (
                    "arquivo_destino",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "tabela_destino",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("total_linhas", models.IntegerField(blank=True, null=True)),
                ("total_colunas", models.IntegerField(blank=True, null=True)),
                (
                    "tamanho_arquivo_mb",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("data_processamento", models.DateTimeField(auto_now_add=True)),
                (
                    "status_processamento",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "tempo_processamento_segundos",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("colunas_identificadas", models.JSONField(blank=True, null=True)),
                ("sample_data", models.JSONField(blank=True, null=True)),
                ("chaves_primarias", models.JSONField(blank=True, null=True)),
                ("registros_validos", models.IntegerField(blank=True, null=True)),
                ("registros_invalidos", models.IntegerField(blank=True, null=True)),
                ("observacoes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Metadados de Processamento",
                "verbose_name_plural": "Metadados de Processamento",
                "db_table": "organizesee_processing_metadata",
            },
        ),
        migrations.CreateModel(
            name="AtivosPessoais",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ticker", models.CharField(max_length=20)),
                ("tipo", models.CharField(max_length=100)),
                ("quantidade", models.DecimalField(decimal_places=8, max_digits=15)),
                ("preco_medio", models.DecimalField(decimal_places=2, max_digits=15)),
                ("data_compra", models.DateField()),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
                ("data_atualizacao", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Ativos Pessoais",
                "verbose_name_plural": "Ativos Pessoais",
                "db_table": "organizesee_ativospessoais",
            },
        ),
        migrations.CreateModel(
            name="DadosPessoais",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome_completo", models.CharField(max_length=200)),
                ("cpf", models.CharField(max_length=11)),
                ("email", models.EmailField(max_length=254)),
                ("endereco", models.CharField(blank=True, max_length=255, null=True)),
                ("numero", models.CharField(blank=True, max_length=10, null=True)),
                ("cep", models.CharField(blank=True, max_length=9, null=True)),
                ("cidade", models.CharField(blank=True, max_length=100, null=True)),
                ("estado", models.CharField(blank=True, max_length=2, null=True)),
                ("telefone", models.CharField(blank=True, max_length=15, null=True)),
                ("data_nascimento", models.DateField(blank=True, null=True)),
                ("genero", models.CharField(blank=True, max_length=20, null=True)),
                ("profissao", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "renda_mensal",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("objetivos_financeiros", models.TextField(blank=True, null=True)),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
                ("data_atualizacao", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Dados Pessoais",
                "verbose_name_plural": "Dados Pessoais",
                "db_table": "organizesee_dadospessoais",
            },
        ),
    ]
